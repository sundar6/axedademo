<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/lang
       http://www.springframework.org/schema/lang/spring-lang-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true" xmlns:lang="http://www.springframework.org/schema/lang">

    <!-- Add new DAOs here -->


    
     <bean id="jdbcTemplate"   class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
         <constructor-arg ref="embeddedDataSource" />
     </bean>

    <jdbc:embedded-database id="embeddedDataSource">

        <jdbc:script location="classpath:schema.sql"/>

    </jdbc:embedded-database>

    <lang:groovy id="ackDeviceAlarms" script-source="classpath:AckDeviceAlarms.groovy"
                 refresh-check-delay="5000">
        <!--<lang:property name="salesForceFacade" ref="salesForceFacade"/>-->
    </lang:groovy>
    <lang:groovy id="parseDataItem" script-source="classpath:DataItemProcessor.groovy"
                 refresh-check-delay="5000">
        <!--<lang:property name="salesForceFacade" ref="salesForceFacade"/>-->
    </lang:groovy>


    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:integration.properties</value>
        </property>
    </bean>

    <bean id="jmsFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL">
            <value>${activemq.brokerurl}</value>
        </property>
        <property name="userName">
            <value>${activemq.username}</value>
        </property>
        <property name="password">
            <value>${activemq.password}</value>
        </property>
        <property name="redeliveryPolicy">
            <bean class="org.apache.activemq.RedeliveryPolicy">
                <property name="initialRedeliveryDelay" value="${activemq.initialRedeliveryDelay}"/>
                <property name="maximumRedeliveries" value="${activemq.maximumRedeliveries}"/>
                <property name="useExponentialBackOff" value="${activemq.useExponentialBackOff}"/>
                <property name="backOffMultiplier" value="${activemq.backOffMultiplier}"/>
            </bean>
        </property>

    </bean>

    <!--  ActiveMQ destination to use  by default - on m2m.axeda.com -->
    <bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="${activemq.queuename}"/>
    </bean>

    <bean id="integrationServiceQueueJMSTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory">
            <!-- lets wrap in a pool to avoid creating a connection per send -->
            <bean class="org.springframework.jms.connection.SingleConnectionFactory">
                <property name="targetConnectionFactory" ref="jmsFactory"/>
                <property name="reconnectOnException" value="true"/>
            </bean>
        </property>
        <property name="receiveTimeout" value="60000"/>
    </bean>
    <!-- Listeners-->
    <bean name="dataItemListener" class="com.axeda.ps.demo.amq.DataItemListener"
          lazy-init="false"
          init-method="initialize">
        <property name="dataItemProcessor" ref="parseDataItem"/>
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <!--Consumers-->
    <bean id="sfdcDavataValueUpdateConsumer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsFactory"/>
        <property name="destination" ref="destination"/>
        <property name="sessionAcknowledgeMode" value="2"/>
        <property name="sessionTransacted" value="true"/>
        <property name="messageListener" ref="dataItemListener"/>
        <property name="messageSelector" value="topic='dataitem'" />
    </bean>
    <!-- Add new Managers here -->
</beans>